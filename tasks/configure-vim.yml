- name: Create Directory for VIM swapping
  file:
    path: "/tmp/vim/{{ item }}"
    state: directory
    mode: 0755
  with_items: 
    - backup
    - swap
    - undo

# Install python requirements needed for various vim plugins
- name: Install/Upgrade Python extensions
  pip:
    name: "{{ item.0 }}"
    executable: "{{ item.1 }}"
    extra_args: --upgrade
  become: true
  with_nested: 
    - "{{ vim_python_requirements }}"
    - "{{ vim_pip_executables }}"

- name: Cloning VIM config repository
  git:
    repo: '{{ vim_remote_git_config_repo }}'
    dest: '{{ vim_config_dir }}'
    recursive: yes

# Build command-t
- name: Build command-t extension
  shell: ruby extconf.rb && make
  args:
    chdir: '{{ vim_config_dir }}/bundle/command-t/ruby/command-t/ext/command-t' 

# Colors
- name: Export color environment variable
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bash_profile"
    line: TERM=xterm-256color
    create: yes

- name: Create symlink to vimrc 
  file:
    src: "{{ vim_config_dir }}/vimrc"
    dest: "{{ ansible_env.HOME }}/.vimrc"
    state: link

# Configure GIT
- name: Use VIM as git core tool
  git_config:
    name: core.editor
    value: vim
    scope: global

- name: Use VIM as git diff-tool
  git_config:
    name: diff.tool
    value: vimdiff
    scope: global

- name: Disable prompt when diffing in git
  git_config:
    name: difftool.prompt
    value: false
    scope: global

- name: Use VIM as git merge-tool
  git_config:
    name: merge.tool
    value: vimdiff
    scope: global

- name: Git push only current
  git_config:
    name: push.default
    value: upstream
    scope: global

# Configure TMUX
- name: Update tmux configuration
  when: vim_configure_tmux == True
  blockinfile:
    path: "{{ vim_tmux_config_file }}"
    marker: "# BLOCK MANAGED BY ANSIBLE-VIM"
    create: yes
    content: |
      is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
          | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
      bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
      bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
      bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
      bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
      bind-key -T copy-mode-vi C-h select-pane -L
      bind-key -T copy-mode-vi C-j select-pane -D
      bind-key -T copy-mode-vi C-k select-pane -U
      bind-key -T copy-mode-vi C-l select-pane -R
      bind-key -T copy-mode-vi C-\ select-pane -l

      # colors
      set -g default-terminal "screen-256color"
