- name: Check wheter GIT is available
  stat: 
    path: "{{vim_git_executable}}"
  register: vim_has_git

- fail: 
    msg: "No GIT available"
  when: vim_has_git.stat.exists == False


- name: Install dependencies
  apt: name={{item}} state=installed
  with_items:
    - libncurses-dev
    - ncurses-term
    - liblua5.1-dev 
    - luajit
    - libluajit-5.1-dev
    - libperl-dev
    - python-dev
    - python-pip
    - python3-dev
    - python3-pip
    - ruby-dev
    - libatk1.0-dev 
    - libx11-dev 
    - libxpm-dev 
    - libxt-dev
 
- name: Install/Upgrade Python extensions
  pip:
    name: "{{ item.0 }}"
    executable: "{{ item.1 }}"
    extra_args: --upgrade
  become: true
  with_nested: 
    - "{{ vim_python_requirements }}"
    - "{{ vim_pip_executables }}"

- name: Create Directory for VIM swapping
  file:
    path: "/tmp/vim/{{ item }}"
    state: directory
    mode: 0755
  with_items: 
    - backup
    - swap
    - undo

- name: Check whether VIM was already build
  stat:
    path: '{{ vim_repo_path}}/src/vim'
  register: vim_is_build

- debug: msg="VIM is build already"
  when: vim_is_build.stat.exists == True 

- name: Cloning VIM repository
  git:
    repo: 'https://github.com/vim/vim'
    dest: '{{ vim_repo_path }}'
  when: vim_is_build.stat.exists == False

- name: Run Configure
  shell: "{{ vim_configure}}"
  args:
    chdir: '{{ vim_repo_path }}' 
  when: vim_is_build.stat.exists == False

- name: Make VIM
  make:
    chdir: '{{ vim_repo_path }}' 
  when: vim_is_build.stat.exists == False

- name: Install VIM
  make:
    target: install
    chdir: '{{ vim_repo_path }}' 
  become: yes

- name: Cloning VIM repository
  git:
    repo: 'https://github.com/windisch/vim.git'
    dest: '{{ vim_config_dir }}'
    recursive: yes

# Build command-t
- name: Build command-t extension
  shell: ruby extconf.rb && make
  args:
    chdir: '{{ vim_config_dir }}/bundle/command-t/ruby/command-t/ext/command-t' 

# Colors
# TODO: Add this bashrc
- name: Export color environment variable
  lineinfile:
    path: /etc/environment
    line: TERM=xterm-256color

- name: Create symlink to vimrc 
  file:
    src: "{{ vim_config_dir }}/vimrc"
    dest: "{{ ansible_env.HOME }}/.vimrc"
    state: link
